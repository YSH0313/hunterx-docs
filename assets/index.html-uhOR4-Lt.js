import{_ as t,c as a,f as i,o as d}from"./app-B3GkPK4x.js";const o={};function r(n,e){return d(),a("div",null,e[0]||(e[0]=[i('<h2 id="功能简介" tabindex="-1"><a class="header-anchor" href="#功能简介"><span>功能简介</span></a></h2><p>分布式功能通过多节点协作，打破单机性能限制，实现高效、稳定的大规模数据抓取。支持基于 Redis 和 RabbitMQ 的分布式任务调度，灵活扩展爬虫节点，实现任务分发、请求去重和数据同步。</p><h2 id="功能特点" tabindex="-1"><a class="header-anchor" href="#功能特点"><span>功能特点</span></a></h2><ul><li><code>高并发任务调度</code>：基于 Redis/RabbitMQ 实现高效的请求队列和任务分发，支持动态扩展节点。</li><li><code>故障恢复</code>：爬虫节点宕机后，任务自动转移，保证数据抓取不中断。</li><li><code>灵活扩展</code>：支持随时增加或减少爬虫节点，动态调整抓取规模。</li><li><code>统一数据存储</code>：抓取的数据通过分布式管道统一入库或分布式存储，便于管理。</li></ul><h2 id="三种运行模式" tabindex="-1"><a class="header-anchor" href="#三种运行模式"><span>三种运行模式</span></a></h2><table><thead><tr><th>模式类型</th><th>说明</th><th>适用场景</th></tr></thead><tbody><tr><td>内存模式</td><td>使用本地队列，适合小规模或单机爬取</td><td>单机调试、轻量级任务</td></tr><tr><td>Redis 模式</td><td>基于 Redis 实现分布式请求队列与去重</td><td>中大型数据采集任务</td></tr><tr><td>RabbitMQ 模式</td><td>基于 RabbitMQ 实现任务调度和消息队列</td><td>高实时性任务、任务分发</td></tr></tbody></table><h2 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理"><span>工作原理</span></a></h2><ul><li><code>任务分发</code>：主节点将请求任务推送到 Redis/RabbitMQ 队列。</li><li><code>节点协作</code>：爬虫节点从队列中拉取任务，进行数据抓取。</li><li><code>全局去重</code>：去重机制避免相同请求重复抓取。</li><li><code>数据入库</code>：各节点将数据统一传递到存储系统。</li><li><code>动态扩展</code>：随时增加/减少节点，自动接入任务队列。</li></ul><h2 id="典型应用场景" tabindex="-1"><a class="header-anchor" href="#典型应用场景"><span>典型应用场景</span></a></h2><ul><li><code>大规模数据抓取</code>：适合上亿级别页面的数据采集，分布式处理大规模请求。</li><li><code>高并发爬取</code>：利用多节点协作，实现更高的抓取速度。</li></ul><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><p>在框架中，由于队列共享机制，对于分布式功能支持格外友好，你只需使用 <code>Redis</code> 或 <code>RabbitMq</code> 队列模式的爬虫，无需额外的配置，即可使用分布式，通过在多台机器上部署多个节点，通过队列共享达到分布式抓取的效果</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>分布式功能有效解决了单机性能瓶颈，支持多节点协作与任务调度。通过 Redis 和 RabbitMQ 的灵活切换，实现高效、稳定的大规模数据采集，具备强大的扩展性与容错能力。</p>',14)]))}const s=t(o,[["render",r],["__file","index.html.vue"]]),l=JSON.parse('{"path":"/guide/u3iigbr3/","title":"分布式","lang":"zh-CN","frontmatter":{"title":"分布式","icon":"mdi:server","createTime":"2025/01/15 14:52:13","permalink":"/guide/u3iigbr3/","description":"功能简介 分布式功能通过多节点协作，打破单机性能限制，实现高效、稳定的大规模数据抓取。支持基于 Redis 和 RabbitMQ 的分布式任务调度，灵活扩展爬虫节点，实现任务分发、请求去重和数据同步。 功能特点 高并发任务调度：基于 Redis/RabbitMQ 实现高效的请求队列和任务分发，支持动态扩展节点。 故障恢复：爬虫节点宕机后，任务自动转移，...","head":[["meta",{"property":"og:url","content":"https://hunterx-docs.com/guide/u3iigbr3/"}],["meta",{"property":"og:site_name","content":"HunterX 文档"}],["meta",{"property":"og:title","content":"分布式"}],["meta",{"property":"og:description","content":"功能简介 分布式功能通过多节点协作，打破单机性能限制，实现高效、稳定的大规模数据抓取。支持基于 Redis 和 RabbitMQ 的分布式任务调度，灵活扩展爬虫节点，实现任务分发、请求去重和数据同步。 功能特点 高并发任务调度：基于 Redis/RabbitMQ 实现高效的请求队列和任务分发，支持动态扩展节点。 故障恢复：爬虫节点宕机后，任务自动转移，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T07:35:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T07:35:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-16T07:35:54.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.07,"words":622},"git":{"updatedTime":1737012954000,"contributors":[{"name":"袁少航","username":"袁少航","email":"yuanshaohang@dataoceanai.com","commits":1,"avatar":"https://avatars.githubusercontent.com/袁少航?v=4","url":"https://github.com/袁少航"}]},"autoDesc":true,"filePathRelative":"notes/guide/3.function/8.distributed.md","bulletin":true}');export{s as comp,l as data};
